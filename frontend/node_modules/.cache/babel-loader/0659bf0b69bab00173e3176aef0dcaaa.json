{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Dropbox\\\\My PC (LAPTOP-2H5OU8U6)\\\\Downloads\\\\ecommerce_mern_fullstack-main\\\\frontend\\\\src\\\\screens\\\\ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productList');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.log(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      description,\n      countInStock\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productList\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 31\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 24\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter Price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Image URL\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: \"Choose File\",\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Count In Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter Count In Stock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductEditScreen, \"tGwP29U+IMS6phYQamHPqg4I56E=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["C:/Users/ADMIN/Dropbox/My PC (LAPTOP-2H5OU8U6)/Downloads/ecommerce_mern_fullstack-main/frontend/src/screens/ProductEditScreen.js"],"names":["axios","React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","listProductDetails","updateProduct","PRODUCT_UPDATE_RESET","ProductEditScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","uploadFileHandler","e","file","target","files","formData","FormData","append","config","headers","data","post","console","log","submitHandler","preventDefault","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditScreen = ({ match, history }) => {\n    const productId = match.params.id\n\n    const[name, setName] = useState('')\n    const[price, setPrice] = useState(0)\n    const[image, setImage] = useState('')\n    const[brand, setBrand] = useState('')\n    const[category, setCategory] = useState('')\n    const[countInStock, setCountInStock] = useState(0)\n    const[description, setDescription] = useState('')\n    const[uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = productUpdate\n\n    useEffect(() => {\n        if(successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productList')\n        } else {\n            if(!product.name || product._id !== productId) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n            }\n        }\n    }, [dispatch, history, productId, product, successUpdate ])\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/upload', formData, config)\n\n            setImage(data)\n            setUploading(false)\n        } catch (error) {\n            console.log(error)\n            setUploading(false)\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            description,\n            countInStock\n        }))\n    }\n\n    return (\n        <>\n            <Link to='/admin/productList' className='btn btn-light my-3'>\n                Go Back\n            </Link>\n            <FormContainer>\n            <h1>Edit Product</h1>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control \n                            type='name' \n                            placeholder='Enter Name' \n                            value={name} \n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='price'>\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control \n                            type='number' \n                            placeholder='Enter Price' \n                            value={price} \n                            onChange={(e) => setPrice(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='image'>\n                        <Form.Label>Image</Form.Label>\n                        <Form.Control \n                            type='text' \n                            placeholder='Enter Image URL' \n                            value={image} \n                            onChange={(e) => setImage(e.target.value)}\n                        ></Form.Control>\n                        <Form.File \n                            id='image-file' \n                            label='Choose File' \n                            custom \n                            onChange={uploadFileHandler}\n                        ></Form.File>\n                        {uploading && <Loader />}\n                    </Form.Group>\n                    <Form.Group controlId='brand'>\n                        <Form.Label>Brand</Form.Label>\n                        <Form.Control \n                            type='text' \n                            placeholder='Enter Brand' \n                            value={brand} \n                            onChange={(e) => setBrand(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='countInStock'>\n                        <Form.Label>Count In Stock</Form.Label>\n                        <Form.Control \n                            type='number' \n                            placeholder='Enter Count In Stock' \n                            value={countInStock} \n                            onChange={(e) => setCountInStock(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='category'>\n                        <Form.Label>Category Address</Form.Label>\n                        <Form.Control \n                            type='text' \n                            placeholder='Enter Category' \n                            value={category} \n                            onChange={(e) => setCategory(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='description'>\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control \n                            type='text' \n                            placeholder='Enter Description' \n                            value={description} \n                            onChange={(e) => setDescription(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n                </Form>\n            )}\n            </FormContainer>\n        </>\n    )\n}\n\nexport default ProductEditScreen"]},"metadata":{},"sourceType":"module"}